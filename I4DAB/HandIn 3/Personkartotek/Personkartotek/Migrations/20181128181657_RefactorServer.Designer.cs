// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Personkartotek.Models;

namespace Personkartotek.Migrations
{
    [DbContext(typeof(PersonkartotekDBHandIn32Context))]
    [Migration("20181128181657_RefactorServer")]
    partial class RefactorServer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Personkartotek.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HouseNumber")
                        .IsRequired();

                    b.Property<int>("PersonId");

                    b.Property<string>("StreetName")
                        .IsRequired();

                    b.Property<int>("ZipId");

                    b.HasKey("AddressId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("PersonId")
                        .HasName("fkIdx_138");

                    b.HasIndex("ZipId")
                        .HasName("fkIdx_100");

                    b.ToTable("AddressMigration");
                });

            modelBuilder.Entity("Personkartotek.Models.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<int>("PersonId");

                    b.HasKey("EmailId");

                    b.HasIndex("PersonId")
                        .HasName("fkIdx_144");

                    b.ToTable("EmailMigration");
                });

            modelBuilder.Entity("Personkartotek.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("MiddleName")
                        .IsRequired();

                    b.Property<string>("PersonType")
                        .IsRequired();

                    b.HasKey("PersonId");

                    b.ToTable("PersonMigration");
                });

            modelBuilder.Entity("Personkartotek.Models.Zip", b =>
                {
                    b.Property<int>("ZipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<string>("ZipCode")
                        .IsRequired();

                    b.HasKey("ZipId");

                    b.ToTable("ZipMigration");
                });

            modelBuilder.Entity("Personkartotek.Models.Address", b =>
                {
                    b.HasOne("Personkartotek.Models.Person", "Person")
                        .WithMany("Address")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_138");

                    b.HasOne("Personkartotek.Models.Zip", "Zip")
                        .WithMany("Address")
                        .HasForeignKey("ZipId")
                        .HasConstraintName("FK_100");
                });

            modelBuilder.Entity("Personkartotek.Models.Email", b =>
                {
                    b.HasOne("Personkartotek.Models.Person", "Person")
                        .WithMany("Email")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_144");
                });
#pragma warning restore 612, 618
        }
    }
}
